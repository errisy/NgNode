"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
//Client file generated by RPC Compiler.
var core_1 = require('@angular/core');
var http_1 = require('@angular/http');
var Observable_1 = require('rxjs/Observable');
var Serializable_1 = require('Serializable');
require('rxjs/add/operator/map');
require('rxjs/add/operator/catch');
var NCBIMethods = (function () {
    function NCBIMethods($_Angular2HttpClient) {
        this.$_Angular2HttpClient = $_Angular2HttpClient;
    }
    NCBIMethods.prototype.test = function () {
        return this.$_Angular2HttpClient.post('/ncbi/ncbi.rpc.js?NCBIMethods-test', []).map(Serializable_1.Converter.convertStringResponse);
    };
    NCBIMethods.prototype.dogs = function () {
        var _this = this;
        return Observable_1.Observable.create(function (observer) {
            _this.$_Angular2HttpClient.post('/ncbi/ncbi.rpc.js?NCBIMethods-dogs', []).map(Serializable_1.Converter.convertStringResponse).subscribe(function (stringValue) {
                console.log("stringValue: ", stringValue);
                if (stringValue) {
                    var jsonObject = JSON.parse(stringValue);
                    Serializable_1.Deserialize(jsonObject, function (deserialized) {
                        observer.next(deserialized);
                        observer.complete();
                    });
                }
                else {
                    observer.next(null);
                    observer.complete();
                }
            });
        });
    };
    NCBIMethods.prototype.log = function (dog) {
        var _this = this;
        return Observable_1.Observable.create(function (observer) {
            _this.$_Angular2HttpClient.post('/ncbi/ncbi.rpc.js?NCBIMethods-log', [dog]).map(Serializable_1.Converter.convertStringResponse).subscribe(function (stringValue) {
                console.log("stringValue: ", stringValue);
                if (stringValue) {
                    var jsonObject = JSON.parse(stringValue);
                    Serializable_1.Deserialize(jsonObject, function (deserialized) {
                        observer.next(deserialized);
                        observer.complete();
                    });
                }
                else {
                    observer.next(null);
                    observer.complete();
                }
            });
        });
    };
    NCBIMethods.prototype.search = function (keywords, limit) {
        var _this = this;
        return Observable_1.Observable.create(function (observer) {
            _this.$_Angular2HttpClient.post('/ncbi/ncbi.rpc.js?NCBIMethods-search', [keywords, limit]).map(Serializable_1.Converter.convertStringResponse).subscribe(function (stringValue) {
                console.log("stringValue: ", stringValue);
                if (stringValue) {
                    var jsonObject = JSON.parse(stringValue);
                    Serializable_1.Deserialize(jsonObject, function (deserialized) {
                        observer.next(deserialized);
                        observer.complete();
                    });
                }
                else {
                    observer.next(null);
                    observer.complete();
                }
            });
        });
    };
    NCBIMethods = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [http_1.Http])
    ], NCBIMethods);
    return NCBIMethods;
}());
exports.NCBIMethods = NCBIMethods;
//# sourceMappingURL=ncbi.client.js.map